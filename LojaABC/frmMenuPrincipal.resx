<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnVoltar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANrSURBVFhH7ZZZSFRRHMbPmcWxwSxtUSkNK4Y0AxHHpTujjjo2OptCBUb0UtlLZWgURJCERT2E
        WZRWD2rlvo2j4wpFYeZDQQZR6eQyuaRpET0UNffc/me6LUaFU87QQx/8uMu5nO/7n3PPPRf9198L80d3
        C2MkknqjwKStyC9K7bh2nwQCtGQDg1NK7wdndMyYDeZRLRYI+UZXCqoUSqRo/e7j2Ng6tSuj49XrjM7X
        doPJloOFIv4hVwkL0CJZOFZdvB2Q3j5tTu94xQKEHvWNw7kQwEVzAFULRB5Itu0g1pnHthjapicN7TOs
        EcwBzgjnepMtVyCWCGgIJ0CU3wuq9gqSIUVBu6/eMlWub5tmAQIBKByFXkNbi94yeVjX8sIZDmlqBiJ5
        px+FwVuIgo1ZWFM/lKqzTNl0rS8d5gA1/UbrS8JD2+cM7Q+Y4A2/E1S9wG8Vij5Ru1BrnijSWqbsAIEQ
        FG4ecfTJu1LBOwRVr0zOxMmVT5Rp5on+tOYXrLZlkvBwroD3xkji648ijpR4akxjp1PNEx8AAgEonCtx
        zLUfo8MJpQ8iNpnG+jRN46wGzHk4V4PCDpwTpzTYjqaYRt+lmMbIpqZxCucukLp+5Ka6cZQFCA0AcO4E
        JVy605JUY2WTG54TCgTh3AkKNuwUKgs79qvKHrxNqrcRHg7CuAXHzua9OgxHHi0JiSvq7lVVW9nEuhFC
        oUFczddlKPCUojVbs8WKws5j8WV971W1w4SHU9WNuIzPAb4IvoI+oVFYnlcepSzqfhRfZWXja4ZIAgWC
        zCt8v7zzd4LREHktQrIdR6RMYVehsqzvY1z1IKHEVw9yEGgWcP9PIXEV/Xbe9SeC0VgakYjl+dVqpvjO
        sLJigFVWPSPArI7oPUVpH8tc7rUzl+46xcbzN6p4t18IRsPDZxlatyffJ+Zs11Wm9CGrqLQSirLSSs05
        eh575V5OYOoOSaBmu4cTiP2Vxjn+xMBK8Vfosfxkw+bY4p5Jpvwpy1QMEIAD2Kii3mz6k0EDO82cBQ97
        Lg/C6/eeCYgu6GqOhdHYeP0pAVj5xZ5s2FOc6e1PBR4iEVqhzsSRp0xZ0cU9b2KuPbZHnru1j27l7hOM
        hnSlDIflXlgrP9NuCc+rUNOX1s2CKRdL0OLQaOS1KsTJ+fyvf0YIfQLKmx6IyYv8JgAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>